/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uk.ac.tees.scedt.b1349506.gui;

import java.awt.event.WindowAdapter;
import java.awt.event.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import uk.ac.tees.scedt.b1349506.ASCStockInterface;

import uk.ac.tees.scedt.b1349506.ASCStockItem;
import uk.ac.tees.scedt.b1349506.MSMStockItem;
import uk.ac.tees.scedt.b1349506.MeganAdapter;


/**
 *
 * @author godsw
 */
public class StockItemForm extends javax.swing.JFrame {
    PrintWriter output = null;
    StringBuilder sBuilder = new StringBuilder();

    File stockItemFile = new File("./assets/_AshersSportsCollective.csv");
    File stockItemSoldFile = new File("./assets/AshersSportsCollectiveSold.csv");

    private static List<ASCStockItem> allASCStockItem = ASCStockItem.loadASCStockItemCSV();
    private static List<MSMStockItem> allMeganStockItem = MSMStockItem.loadStock();
    private static List<MeganAdapter> allMeganAdaptedStockItem = new ArrayList<>();

//    adapteMsmStockItems(allMeganStockItem, allMeganAdaptedStockItem);

    private static List<ASCStockInterface> allStockItems = new ArrayList<>();

//    allStockItems.addAll (allMeganAdaptedStockItem);
//
//    allStockItems.addAll (allAscStockItem);
    
    

    /**
     * Creates new form StockItemForm
     */
    public StockItemForm() {
        initComponents();
        adapteMsmStockItems();
        stockItemTable.setModel(new StockItemModel(allStockItems));
        confirmCloseAction();
    }
    
    private void confirmCloseAction() {
        addWindowListener(new WindowAdapter() {
            String newline = System.lineSeparator();
            @Override
            public void windowClosing(WindowEvent e) {
                final List<String> tempStockArray = new ArrayList<>();
                int option = JOptionPane.showConfirmDialog(null, "Do you want to close this window?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if(option == JOptionPane.YES_OPTION) {
                    for (ASCStockInterface stock : allStockItems) {
                        sBuilder.append(stock.getProductCode());
                        sBuilder.append(",");
                        sBuilder.append(stock.getProductTitle());
                        sBuilder.append(",");
                        sBuilder.append(stock.getProductDesc());
                        sBuilder.append(",");
                        sBuilder.append(stock.getProductPriceInPounds());
                        sBuilder.append(",");
                        sBuilder.append(stock.getProductPriceInPence());
                        sBuilder.append(",");
                        sBuilder.append(stock.getQtyInStock());
                        sBuilder.append(newline);
                    }
                    writeToFile(output,stockItemFile, sBuilder.toString());
                    System.out.println("I HAVE CLOSED OOOOO");
                }
            }
        });
    }
    
    private static void adapteMsmStockItems() {
        for (MSMStockItem stock : allMeganStockItem) {
          MeganAdapter adaptedItem = new MeganAdapter(stock);
            allMeganAdaptedStockItem.add(adaptedItem);
        }
        allStockItems.addAll(allMeganAdaptedStockItem);

        allStockItems.addAll(allASCStockItem);
    }
    
    public static void writeToFile(PrintWriter _output, File _stockItemFile, String _stockItems) {
        try {
            FileWriter fw = new FileWriter(_stockItemFile, true);
            _output = new PrintWriter(fw);
            _output.print(_stockItems);
            _output.close();

        } catch (FileNotFoundException e) // problem with file !
        {
            System.out.println("Error - problem creating the file! Program closing");
            System.exit(0);  // this terminates the program - parameter 0 indicates normal termination
        } catch (IOException ex) {
            System.out.println("Error - problem creating the file! Program closing");
            System.exit(0);  // this terminates the program - parameter 0 indicates normal termination
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stockItemTable = new javax.swing.JTable();
        addStock = new javax.swing.JButton();
        sellStock = new javax.swing.JButton();
        createNewStockItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stockItemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(stockItemTable);

        addStock.setText("Add Stock");
        addStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStockActionPerformed(evt);
            }
        });

        sellStock.setText("Sell Stock");
        sellStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellStockActionPerformed(evt);
            }
        });

        createNewStockItem.setText("new Stock");
        createNewStockItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewStockItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(createNewStockItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sellStock)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStock)
                    .addComponent(sellStock)
                    .addComponent(createNewStockItem))
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStockActionPerformed
        int isSelectedRow = stockItemTable.getSelectedRow();     // TODO add your handling code here:
        
        if(isSelectedRow != -1) {
            ASCStockInterface selectedStock = allStockItems.get(isSelectedRow);
            selectedStock.addStockQuantity();
            stockItemTable.updateUI();
        }else {
            JOptionPane.showMessageDialog(null, "No Stock Selected", "Note", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addStockActionPerformed

    private void sellStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellStockActionPerformed
        String newline = System.lineSeparator();
        int isSelectedRow = stockItemTable.getSelectedRow();     // TODO add your handling code here:
        if(isSelectedRow != -1) {
            ASCStockInterface selectedStock = allStockItems.get(isSelectedRow);
            int inStock = selectedStock.getQtyInStock();
            
            if(inStock == 0) {
                return;
            }else{
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");  
                Date date = new Date();  
                
                selectedStock.removeStockQuantity();
                stockItemTable.updateUI();
                inStock = selectedStock.getQtyInStock();
                String productCode = selectedStock.getProductCode();
                if(inStock <= 5) {
                JOptionPane.showMessageDialog(null, productCode+" quantity left: " + inStock, "Low Stock Alert", JOptionPane.WARNING_MESSAGE);
                }
                    
                String stockItemSold = formatter.format(date) +","+ selectedStock.getProductCode() + "," + 1 +"," +selectedStock.getUnitPrice() + newline;
                writeToFile(output,stockItemSoldFile, stockItemSold);
            }
        }else {
            JOptionPane.showMessageDialog(null, "No Stock Selected", "Note", JOptionPane.WARNING_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_sellStockActionPerformed

    private void createNewStockItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewStockItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createNewStockItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockItemForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockItemForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStock;
    private javax.swing.JButton createNewStockItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sellStock;
    private javax.swing.JTable stockItemTable;
    // End of variables declaration//GEN-END:variables
}
